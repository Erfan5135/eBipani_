CREATE OR REPLACE FUNCTION GET_PRODUCT_NAME (PID IN NUMBER) 
RETURN VARCHAR2 IS 
	NAME VARCHAR2(32);
BEGIN
	SELECT PRODUCT_NAME INTO NAME 
	FROM PRODUCT 
	WHERE PRODUCT_ID = PID; 
	RETURN NAME;
END;

CREATE OR REPLACE FUNCTION GET_ROLE(MAIL IN VARCHAR2) 
RETURN VARCHAR2 IS 
	UROLE VARCHAR2(10);
BEGIN 
	SELECT UPPER(ROLE) INTO UROLE
	FROM USERS
	WHERE EMAIL = MAIL;
	
	RETURN UROLE;
END;

CREATE OR REPLACE FUNCTION GET_SELLER_EMAIL(PID IN NUMBER) 
RETURN VARCHAR2 IS 
	MAIL VARCHAR2(320);
BEGIN 
	SELECT SELLER_EMAIL INTO MAIL
	FROM PRODUCT 
	WHERE PRODUCT_ID = PID;
	
	RETURN MAIL;
END;

CREATE OR REPLACE FUNCTION IN_STOCK (SE IN VARCHAR2, CE IN VARCHAR2)
RETURN NUMBER IS 
	FLAG NUMBER;
	N NUMBER;
BEGIN 
	FLAG := 0;
	FOR R IN (SELECT
							S.PRODUCT_ID AS PID,
							S.TOTAL_UNIT AS TU 
						FROM
							SELECTS S 
						WHERE
							S.CUSTOMER_EMAIL = CE 
							AND UPPER( STATUS ) = 'SELECTED' 
							AND S.PRODUCT_ID IN ( SELECT PRODUCT_ID FROM PRODUCT WHERE SELLER_EMAIL = SE ))
	LOOP 
		SELECT UNITS_IN_STOCK INTO N 
		FROM PRODUCT 
		WHERE PRODUCT_ID=R.PID;
		
		IF R.TU > N THEN 
			FLAG := R.PID;
			EXIT;
		END IF;
	END LOOP;

	IF FLAG = 0 THEN
		FOR R IN (SELECT
								S.PRODUCT_ID AS PID,
								S.TOTAL_UNIT AS TU 
							FROM
								SELECTS S 
							WHERE
								S.CUSTOMER_EMAIL = CE 
								AND UPPER( STATUS ) = 'SELECTED' 
								AND S.PRODUCT_ID IN ( SELECT PRODUCT_ID FROM PRODUCT WHERE SELLER_EMAIL = SE ))
		LOOP 
			UPDATE PRODUCT 
			SET UNITS_IN_STOCK = UNITS_IN_STOCK - R.TU,
					UNITS_ON_ORDER = UNITS_ON_ORDER + R.TU 
			WHERE PRODUCT.PRODUCT_ID = R.PID;
		END LOOP;
	END IF;
	
	RETURN FLAG;
END;