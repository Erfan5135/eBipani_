CREATE OR REPLACE PROCEDURE ADD_TO_CART(PID IN NUMBER, MAIL IN VARCHAR2) IS 
	N NUMBER;
BEGIN 
	SELECT COUNT(*) INTO N 
	FROM SELECTS 
	WHERE CUSTOMER_EMAIL = MAIL AND PRODUCT_ID = PID AND UPPER(STATUS) = 'SELECTED';
	
	IF N > 0 THEN
		SELECT TOTAL_UNIT INTO N 
		FROM SELECTS 
		WHERE CUSTOMER_EMAIL = MAIL AND PRODUCT_ID = PID AND UPPER(STATUS) = 'SELECTED';
		
		UPDATE SELECTS 
		SET TOTAL_UNIT = N + 1
		WHERE CUSTOMER_EMAIL = MAIL AND PRODUCT_ID = PID AND UPPER(STATUS) = 'SELECTED';
	ELSE 
		INSERT INTO SELECTS
		VALUES(PID, MAIL, 1, 'SELECTED');
	END IF;
END;


CREATE OR REPLACE PROCEDURE REVERT_STOCK (SE IN VARCHAR2, CE IN VARCHAR2) IS
BEGIN 
	FOR R IN (SELECT
							S.PRODUCT_ID AS PID,
							S.TOTAL_UNIT AS TU 
						FROM
							SELECTS S 
						WHERE
							S.CUSTOMER_EMAIL = CE 
							AND UPPER( STATUS ) = 'SELECTED' 
							AND S.PRODUCT_ID IN ( SELECT PRODUCT_ID FROM PRODUCT WHERE SELLER_EMAIL = SE ))
	LOOP 
		UPDATE PRODUCT 
		SET UNITS_IN_STOCK = UNITS_IN_STOCK + R.TU,
				UNITS_ON_ORDER = UNITS_ON_ORDER - R.TU 
		WHERE PRODUCT.PRODUCT_ID = R.PID;
	END LOOP;
END;


CREATE OR REPLACE PROCEDURE SET_STATUS_IN_SELECTS(SE IN VARCHAR2, CE IN VARCHAR2) IS 
BEGIN
	UPDATE SELECTS 
	SET STATUS='PAID' 
	WHERE CUSTOMER_EMAIL=CE AND UPPER(STATUS)='SELECTED' AND PRODUCT_ID IN (SELECT PRODUCT_ID FROM PRODUCT WHERE SELLER_EMAIL=SE);
END;

CREATE OR REPLACE PROCEDURE UPDATE_RATING_REVIEW(MAIL IN VARCHAR2, PID IN VARCHAR2, MSG IN VARCHAR2, VALUE IN VARCHAR2) IS 
	N NUMBER;
BEGIN
	SELECT COUNT(CUSTOMER_EMAIL) INTO N 
	FROM REVIEW 
	WHERE CUSTOMER_EMAIL = MAIL AND PRODUCT_ID = TO_NUMBER(PID);
	
	IF N > 0 THEN	
		IF UPPER(MSG) = 'RATING' THEN
			UPDATE REVIEW
			SET RATING = TO_NUMBER(VALUE)
			WHERE CUSTOMER_EMAIL = MAIL AND PRODUCT_ID = TO_NUMBER(PID);
		ELSE
			UPDATE REVIEW
			SET CUSTOMER_COMMENT = VALUE
			WHERE CUSTOMER_EMAIL = MAIL AND PRODUCT_ID = TO_NUMBER(PID);
		END IF;
		
	ELSE
		IF UPPER(MSG) = 'RATING' THEN
			INSERT INTO REVIEW(CUSTOMER_EMAIL, PRODUCT_ID, RATING)
			VALUES(MAIL, PID, TO_NUMBER(VALUE));
		ELSE
			INSERT INTO REVIEW(CUSTOMER_EMAIL, PRODUCT_ID, CUSTOMER_COMMENT)
			VALUES(MAIL, PID, VALUE);
		END IF;
	
	END IF;
	
EXCEPTION
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('ERROR');
		
END;

CREATE OR REPLACE PROCEDURE UPDATE_STOCK (SE IN VARCHAR2, CE IN VARCHAR2) IS
BEGIN 
	FOR R IN (SELECT
							S.PRODUCT_ID AS PID,
							S.TOTAL_UNIT AS TU 
						FROM
							SELECTS S 
						WHERE
							S.CUSTOMER_EMAIL = CE 
							AND UPPER( STATUS ) = 'SELECTED' 
							AND S.PRODUCT_ID IN ( SELECT PRODUCT_ID FROM PRODUCT WHERE SELLER_EMAIL = SE ))
	LOOP 
		UPDATE PRODUCT 
		SET UNITS_IN_STOCK = UNITS_IN_STOCK + R.TU,
				UNITS_ON_ORDER = UNITS_ON_ORDER - R.TU 
		WHERE PRODUCT.PRODUCT_ID = R.PID;
	END LOOP;
END;

CREATE OR REPLACE PROCEDURE USER_AUTHENTICATION (mail IN VARCHAR2, pass IN VARCHAR2, no OUT NUMBER) IS
BEGIN
	SELECT COUNT(*) INTO no
	FROM C##EBIPANI.USERS 
	WHERE EMAIL = mail AND PASSWORD = pass;
END;

