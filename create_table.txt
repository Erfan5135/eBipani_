CREATE TABLE USERS (
	EMAIL VARCHAR2 ( 320 ) NOT NULL,
	PASSWORD VARCHAR2 ( 64 ) NOT NULL,
	PHONE NUMBER ( 11 ) NOT NULL,
	CITY VARCHAR2 ( 10 ),
	COUNTRY VARCHAR2 ( 10 ),
	POSTAL_CODE NUMBER ( 10 ),
	ROLE VARCHAR2 ( 10 ) NOT NULL,
	CONSTRAINT PK_EMAIL_USERS PRIMARY KEY ( EMAIL ) 
);

CREATE TABLE SELLER (
	EMAIL VARCHAR2 ( 320 ) NOT NULL,
	SHOP_NAME VARCHAR2 ( 64 ) NOT NULL,
	REGISTRATION_NO VARCHAR2 ( 64 ) NOT NULL,
	bKASH_NO NUMBER ( 11 ) NOT NULL,
	CONSTRAINT PK_EMAIL_SELLER PRIMARY KEY ( EMAIL ),
	CONSTRAINT FK_EMAIL_SELLER FOREIGN KEY ( EMAIL ) REFERENCES USERS ( EMAIL ) 
);

CREATE TABLE CUSTOMER (
	EMAIL VARCHAR2 ( 320 ) NOT NULL,
	FIRST_NAME VARCHAR2 ( 64 ),
	SECOND_NAME VARCHAR2 ( 64 ),
	CONSTRAINT PK_EMAIL_CUSTOMER PRIMARY KEY ( EMAIL ),
	CONSTRAINT FK_EMAIL_CUSTOMER FOREIGN KEY ( EMAIL ) REFERENCES USERS ( EMAIL ) 
);

CREATE TABLE CATEGORY ( 
	CATEGORY_NAME VARCHAR2 ( 32 ) NOT NULL, 
	DESCRIPTION VARCHAR2 ( 256 ), 
	CONSTRAINT PK_CN_CATEGORY PRIMARY KEY ( CATEGORY_NAME ) 
);

CREATE TABLE PRODUCT (
	PRODUCT_ID NUMBER GENERATED ALWAYS AS IDENTITY,
	CATEGORY_NAME VARCHAR2 ( 32 ) NOT NULL,
	PRODUCT_NAME VARCHAR2 ( 32 ) NOT NULL,
	UNIT_PRICE NUMBER ( 10, 2 ) NOT NULL,
	UNITS_IN_STOCK NUMBER ( 5 ),
	UNITS_ON_ORDER NUMBER ( 5 ),
	IMAGE VARCHAR2 ( 256 ),
	DESCRIPTION VARCHAR2 ( 256 ),
	SELLER_EMAIL VARCHAR2 ( 320 ) NOT NULL,
	CONSTRAINT PK_ID_PRODUCT PRIMARY KEY ( PRODUCT_ID ),
	CONSTRAINT FK_CN_PRODUCT FOREIGN KEY ( CATEGORY_NAME ) REFERENCES CATEGORY ( CATEGORY_NAME ),
	CONSTRAINT FK_SE_PRODUCT FOREIGN KEY ( SELLER_EMAIL ) REFERENCES SELLER ( EMAIL ) 
);
ALTER TABLE PRODUCT
ADD SUB_CATEGORY VARCHAR2(250);

CREATE TABLE SELECTS (
	PRODUCT_ID NUMBER NOT NULL,
	CUSTOMER_EMAIL VARCHAR2 ( 320 ) NOT NULL,
	TOTAL_UNIT NUMBER,
	STATUS VARCHAR2 ( 16 ) NOT NULL,
	CONSTRAINT PK_PID_CE_SELECTS PRIMARY KEY ( PRODUCT_ID, CUSTOMER_EMAIL ),
	CONSTRAINT FK_PID_SELECTS FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
	CONSTRAINT FK_CE_SELECTS FOREIGN KEY ( CUSTOMER_EMAIL ) REFERENCES CUSTOMER ( EMAIL ) 
);
ALTER TABLE SELECTS 
DROP CONSTRAINT PK_PID_CE_SELECTS;

CREATE TABLE SHIPPER (
	SHIPPER_ID NUMBER GENERATED ALWAYS AS IDENTITY,
	COMPANY_NAME VARCHAR2(32) NOT NULL,
	PHONE NUMBER(11) NOT NULL,
	CONSTRAINT PK_ID_SHIPPER PRIMARY KEY ( SHIPPER_ID )
);
ALTER TABLE SHIPPER
ADD POSTAL_CODE NUMBER;

CREATE TABLE REVIEW (
	CUSTOMER_EMAIL VARCHAR2 ( 320 ) NOT NULL,
	PRODUCT_ID NUMBER NOT NULL,
	RATING NUMBER,
	CUSTOMER_COMMENT VARCHAR2(256),
	CONSTRAINT PK_PID_CE_REVIEW PRIMARY KEY ( PRODUCT_ID, CUSTOMER_EMAIL ),
	CONSTRAINT FK_PID_REVIEW FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID),
	CONSTRAINT FK_CE_REVIEW FOREIGN KEY ( CUSTOMER_EMAIL ) REFERENCES CUSTOMER ( EMAIL ) 
);

CREATE TABLE ORDER_DETAILS (
	ORDER_ID NUMBER GENERATED ALWAYS AS IDENTITY,
	ORDER_DATE DATE NOT NULL,
	DELIVERY_DATE DATE NOT NULL,
	SHIPPED_DATE DATE NOT NULL,
	PAYMENT_TYPE VARCHAR2 ( 16 ) NOT NULL,
	DELIVERY_ADDRESS VARCHAR2 ( 512 ) NOT NULL,
	CUSTOMER_EMAIL VARCHAR2 ( 320 ) NOT NULL,
	TRANSACTION_ID VARCHAR2 ( 32 ) NOT NULL,
	BKASH_NO NUMBER ( 11 ) NOT NULL,
	SHIPPER_ID NUMBER NOT NULL,
	CONSTRAINT PK_OID_ORDER_DETAILS PRIMARY KEY ( ORDER_ID ),
	CONSTRAINT FK_CE_ORDER_DETAILS FOREIGN KEY ( CUSTOMER_EMAIL ) REFERENCES CUSTOMER ( EMAIL ),
	CONSTRAINT FK_SID_ORDER_DETAILS FOREIGN KEY ( SHIPPER_ID ) REFERENCES SHIPPER ( SHIPPER_ID ) 
);

ALTER TABLE ORDER_DETAILS
ADD TOTAL_PRICE NUMBER NOT NULL;
ALTER TABLE ORDER_DETAILS
ADD STATUS VARCHAR2(29);
ALTER TABLE ORDER_DETAILS
ADD POSTAL_CODE NUMBER NOT NULL;
ALTER TABLE ORDER_DETAILS
ADD CONSTRAINT UNIQUE_TRANSACTION_ID UNIQUE (TRANSACTION_ID);

CREATE TABLE ORDERS (
	CUSTOMER_EMAIL VARCHAR2 ( 320 ) NOT NULL,
	PRODUCT_ID NUMBER NOT NULL,
	ORDER_ID NUMBER NOT NULL,
	CONSTRAINT FK_PID_ORDERS FOREIGN KEY ( PRODUCT_ID ) REFERENCES PRODUCT ( PRODUCT_ID ),
	CONSTRAINT FK_CE_ORDERS FOREIGN KEY ( CUSTOMER_EMAIL ) REFERENCES CUSTOMER ( EMAIL ),
	CONSTRAINT FK_OID_ORDERS FOREIGN KEY ( ORDER_ID ) REFERENCES ORDER_DETAILS ( ORDER_ID ) 
);